
CREATE TABLE OT_DOCUMENT
(
    OT_DOC_ID                       INTEGER NOT NULL PRIMARY KEY,
    DOCUMENT_DATE                   CHAR(19) NOT NULL,
    EMPLOYEE_ID                     INTEGER NOT NULL,
    DOCUMENT_STATUS                 INTEGER NOT NULL,
    NOTE                            TEXT,    
    RECEIVE_AMOUNT                  NUMERIC(12, 2),
    ITEM_COUNT                      NUMERIC(12, 2),

    CREATE_DATE                     CHAR(19) NOT NULL,
    MODIFY_DATE                     CHAR(19) NOT NULL,

    FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
);

CREATE SEQUENCE OT_DOCUMENT_SEQ START 1;

CREATE TABLE OT_DOC_ITEM
(
    OT_DOC_ITEM_ID                  INTEGER NOT NULL PRIMARY KEY,
    OT_DOC_ID                       INTEGER NOT NULL,
    RECEIVE_AMOUNT                  NUMERIC(12, 2),
    NOTE                            TEXT,
    FROM_OT_DATE                    CHAR(19) NOT NULL,
    FROM_OT_TIME                    CHAR(5) NOT NULL,
    TO_OT_DATE                      CHAR(19) NOT NULL,    
    TO_OT_TIME                      CHAR(5) NOT NULL,
    OT_HOUR                         NUMERIC(12, 2),
    OT_RATE                         NUMERIC(12, 2),
    OT_AMOUNT                       NUMERIC(12, 2),
    MULTIPLIER                      NUMERIC(12, 2),

    CREATE_DATE                     CHAR(19) NOT NULL,
    MODIFY_DATE                     CHAR(19) NOT NULL,

    FOREIGN KEY(OT_DOC_ID) REFERENCES OT_DOCUMENT(OT_DOC_ID)
);

CREATE SEQUENCE OT_DOC_ITEM_SEQ START 1;

ALTER TABLE OT_DOC_ITEM ADD FROM_OT_HH CHAR(19);
ALTER TABLE OT_DOC_ITEM ADD FROM_OT_MM CHAR(19);
ALTER TABLE OT_DOC_ITEM ADD TO_OT_HH CHAR(19);
ALTER TABLE OT_DOC_ITEM ADD TO_OT_MM CHAR(19);

ALTER TABLE OT_DOC_ITEM DROP COLUMN FROM_OT_HH;
ALTER TABLE OT_DOC_ITEM DROP COLUMN FROM_OT_MM;
ALTER TABLE OT_DOC_ITEM DROP COLUMN TO_OT_HH;
ALTER TABLE OT_DOC_ITEM DROP COLUMN TO_OT_MM;

ALTER TABLE OT_DOC_ITEM ADD FROM_OT_HH CHAR(2);
ALTER TABLE OT_DOC_ITEM ADD FROM_OT_MM CHAR(2);
ALTER TABLE OT_DOC_ITEM ADD TO_OT_HH CHAR(2);
ALTER TABLE OT_DOC_ITEM ADD TO_OT_MM CHAR(2);

ALTER TABLE OT_DOCUMENT ADD OT_RATE NUMERIC(12, 2);

ALTER TABLE AUXILARY_DOC ALTER COLUMN FINAL_DISCOUNT TYPE NUMERIC(12, 2);

ALTER TABLE AUXILARY_DOC_ITEM ALTER COLUMN DISCOUNT_PCT TYPE NUMERIC(12, 2);
ALTER TABLE AUXILARY_DOC_ITEM ADD DISCOUNT_PCT_FLAG CHAR(1);

ALTER TABLE OT_DOCUMENT ADD FROM_DAY_OF_WEEK INTEGER;
ALTER TABLE OT_DOCUMENT ADD TO_DAY_OF_WEEK INTEGER;

ALTER TABLE OT_DOCUMENT DROP COLUMN FROM_DAY_OF_WEEK;
ALTER TABLE OT_DOCUMENT DROP COLUMN TO_DAY_OF_WEEK;

ALTER TABLE OT_DOC_ITEM ADD FROM_DAY_OF_WEEK INTEGER;
ALTER TABLE OT_DOC_ITEM ADD TO_DAY_OF_WEEK INTEGER;

ALTER TABLE AUXILARY_DOC ADD NOTE_WIDTH INTEGER;
ALTER TABLE AUXILARY_DOC ADD NOTE_HEIGHT INTEGER;
ALTER TABLE AUXILARY_DOC ADD NOTE_TEXT TEXT;

UPDATE AUXILARY_DOC SET NOTE_WIDTH = 400;
UPDATE AUXILARY_DOC SET NOTE_HEIGHT = 400;

ALTER TABLE AUXILARY_DOC ADD NOTE_STICK_FLAG CHAR(1);
UPDATE AUXILARY_DOC SET NOTE_STICK_FLAG = 'N';

ALTER TABLE AUXILARY_DOC ALTER COLUMN NOTE_WIDTH TYPE NUMERIC(12, 2);
ALTER TABLE AUXILARY_DOC ALTER COLUMN NOTE_HEIGHT TYPE NUMERIC(12, 2);

ALTER TABLE AUXILARY_DOC ADD NOTE_TOP NUMERIC(12, 2);
ALTER TABLE AUXILARY_DOC ADD NOTE_LEFT NUMERIC(12, 2);

UPDATE AUXILARY_DOC SET NOTE_TOP = 12;
UPDATE AUXILARY_DOC SET NOTE_LEFT = 1;

UPDATE AUXILARY_DOC SET NOTE_WIDTH = 10;
UPDATE AUXILARY_DOC SET NOTE_HEIGHT = 7;

ALTER TABLE AUXILARY_DOC ADD CREDIT_TERM INTEGER;


ALTER TABLE OT_DOC_ITEM ADD OT_ADJUST_HOUR NUMERIC(12, 2);
ALTER TABLE OT_DOC_ITEM ADD OT_ADJUSTED_TOTAL_HOUR NUMERIC(12, 2);

UPDATE OT_DOC_ITEM SET OT_ADJUST_HOUR = 0;
UPDATE OT_DOC_ITEM SET OT_ADJUSTED_TOTAL_HOUR = OT_HOUR;


ALTER TABLE OT_DOCUMENT ADD EXPENSE_AMOUNT NUMERIC(12, 2);
ALTER TABLE OT_DOCUMENT ADD EXPENSE_ITEM_COUNT NUMERIC(12, 2);

CREATE TABLE PAYROLL_EXPENSE_ITEM
(
    PAYROLL_EXP_ITEM_ID             INTEGER NOT NULL PRIMARY KEY,
    OT_DOC_ID                       INTEGER NOT NULL,
    EXPENSE_TYPE                    INTEGER NOT NULL,    
    EXPENSE_AMOUNT                  NUMERIC(12, 2),
    EXPENSE_NOTE                    TEXT,
    EXPENSE_DATE                    CHAR(19) NOT NULL,
    EXPENSE_QUANTITY                NUMERIC(12, 2),
    EXPENSE_PRICE                   NUMERIC(12, 2),

    CREATE_DATE                     CHAR(19) NOT NULL,
    MODIFY_DATE                     CHAR(19) NOT NULL,

    FOREIGN KEY(OT_DOC_ID) REFERENCES OT_DOCUMENT(OT_DOC_ID)
);

CREATE SEQUENCE PAYROLL_EXPENSE_ITEM_SEQ START 1;

ALTER TABLE OT_DOCUMENT ADD EMPLOYEE_TYPE INTEGER;
UPDATE OT_DOCUMENT SET EMPLOYEE_TYPE = 2;

ALTER TABLE OT_DOC_ITEM ADD OT_FLAG CHAR(1);
ALTER TABLE OT_DOC_ITEM ADD WORK_AMOUNT NUMERIC(12, 2);
ALTER TABLE OT_DOC_ITEM ADD FROM_WORK_DATE CHAR(19);
ALTER TABLE OT_DOC_ITEM ADD FROM_WORK_DAY_OF_WEEK INTEGER;
ALTER TABLE OT_DOC_ITEM ADD FROM_WORK_HH CHAR(19);
ALTER TABLE OT_DOC_ITEM ADD FROM_WORK_MM CHAR(19);
ALTER TABLE OT_DOC_ITEM ADD TO_WORK_HH CHAR(19);
ALTER TABLE OT_DOC_ITEM ADD TO_WORK_MM CHAR(19);
ALTER TABLE OT_DOC_ITEM ADD WORK_ADJUST_HOUR NUMERIC(12, 2);
ALTER TABLE OT_DOC_ITEM ADD WORK_HOUR NUMERIC(12, 2);
ALTER TABLE OT_DOC_ITEM ADD WORK_ADJUSTED_TOTAL_HOUR NUMERIC(12, 2);

ALTER TABLE PAYROLL_DOCUMENT ADD PAY_IN_DATE CHAR(19);

ALTER TABLE CASH_ACCOUNT ADD CASH_ACCOUNT CHAR(1);
UPDATE CASH_ACCOUNT SET CASH_ACCOUNT = 'N';

ALTER TABLE CASH_ACCOUNT DROP COLUMN CASH_ACCOUNT;

ALTER TABLE CASH_ACCOUNT ADD PAYROLL_FLAG CHAR(1);
UPDATE CASH_ACCOUNT SET PAYROLL_FLAG = 'N';

ALTER TABLE PAYROLL_DOCUMENT ADD PAYROLL_CASH_ACCOUNT_ID INTEGER;
ALTER TABLE PAYROLL_DOCUMENT ADD FOREIGN KEY(PAYROLL_CASH_ACCOUNT_ID) REFERENCES CASH_ACCOUNT(CASH_ACCOUNT_ID);

INSERT INTO GLOBAL_VARIABLE
(GLOBAL_VARIABLE_ID, VARIABLE_NAME, VARIABLE_TYPE, VARIABLE_CATEGORY, VARIABLE_VALUE, VARIABLE_DESC, CREATE_DATE, MODIFY_DATE)
VALUES
(26, 'PAYROLL_SERVICE_CODE', 2, 1, 'CHANGE_THIS!!!', 'Service code for payroll', '2019/04/25 00:00:00', '2019/04/25 00:00:00');

INSERT INTO GLOBAL_VARIABLE
(GLOBAL_VARIABLE_ID, VARIABLE_NAME, VARIABLE_TYPE, VARIABLE_CATEGORY, VARIABLE_VALUE, VARIABLE_DESC, CREATE_DATE, MODIFY_DATE)
VALUES
(27, 'PAYROLL_PROJECT_CODE', 2, 1, 'CHANGE_THIS!!!', 'Project code for payroll', '2019/04/25 00:00:00', '2019/04/25 00:00:00');

ALTER TABLE OT_DOCUMENT ADD COMPANY_SOCIAL_SECURITY_AMOUNT NUMERIC(12, 2);

ALTER TABLE OT_DOCUMENT DROP COLUMN COMPANY_SOCIAL_SECURITY_AMOUNT;

ALTER TABLE PAYROLL_DOCUMENT ADD COMPANY_SOCIAL_SECURITY_AMOUNT NUMERIC(12, 2);

UPDATE PAYROLL_DOCUMENT PD SET COMPANY_SOCIAL_SECURITY_AMOUNT =
(
    SELECT SUM(PDI.SOCIAL_SECURITY_COMPANY) FROM PAYROLL_DOC_ITEM PDI WHERE PDI.PAYROLL_DOC_ID = PD.PAYROLL_DOC_ID
);

INSERT INTO GLOBAL_VARIABLE
(GLOBAL_VARIABLE_ID, VARIABLE_NAME, VARIABLE_TYPE, VARIABLE_CATEGORY, VARIABLE_VALUE, VARIABLE_DESC, CREATE_DATE, MODIFY_DATE)
VALUES
(28, 'SOCIAL_SECURITY_SERVICE_CODE', 2, 1, 'CHANGE_THIS!!!', 'Service code for company social security expense', '2019/05/01 00:00:00', '2019/05/01 00:00:00');

ALTER TABLE AUXILARY_DOC ADD INDEX_ITEMS TEXT;

ALTER TABLE TAX_DOCUMENT ADD IS_TAX_DEDUCTABLE TEXT;

ALTER TABLE ENTITY_ADDRESS ADD SORT_ORDER INTEGER;
UPDATE ENTITY_ADDRESS SET SORT_ORDER = 1;

ALTER TABLE AUXILARY_DOC ADD CREDIT_TERM_ID INTEGER;
ALTER TABLE AUXILARY_DOC ADD FOREIGN KEY(CREDIT_TERM_ID) REFERENCES MASTER_REF(MASTER_ID);

CREATE TABLE PAYROLL_DEDUCTION_ITEM
(
    PAYROLL_DEDUCTION_ITEM_ID       INTEGER NOT NULL PRIMARY KEY,
    OT_DOC_ID                       INTEGER NOT NULL,
    DEDUCTION_TYPE                  INTEGER NOT NULL,    
    DEDUCTION_AMOUNT                NUMERIC(12, 2),
    DEDUCTION_NOTE                  TEXT,
    DEDUCTION_DATE                  CHAR(19) NOT NULL,
    DEDUCTION_QUANTITY              NUMERIC(12, 2),
    DEDUCTION_PRICE                 NUMERIC(12, 2),

    CREATE_DATE                     CHAR(19) NOT NULL,
    MODIFY_DATE                     CHAR(19) NOT NULL,

    FOREIGN KEY(OT_DOC_ID) REFERENCES OT_DOCUMENT(OT_DOC_ID)
);

CREATE SEQUENCE PAYROLL_DEDUCTION_ITEM_SEQ START 1;

ALTER TABLE ACCOUNT_DOC ADD REDEEM_DOCUMENT_ID INTEGER;
ALTER TABLE ACCOUNT_DOC ADD FOREIGN KEY(REDEEM_DOCUMENT_ID) REFERENCES CASH_DOC(CASH_DOC_ID);

ALTER TABLE ENTITY ADD CREDIT_TERM_ID INTEGER;
ALTER TABLE ENTITY ADD FOREIGN KEY(CREDIT_TERM_ID) REFERENCES MASTER_REF(MASTER_ID);
